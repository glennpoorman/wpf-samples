<Window x:Class="ViewModels.EditDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="Edit Scout" Height="240" Width="325" ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner" ShowInTaskbar="False"
        FocusManager.FocusedElement="{Binding ElementName=nameBox}">

    <!-- Create a resource section for the window. -->

    <Window.Resources>

        <!-- Create the object data provider to bind to the combo box items source. -->

        <ObjectDataProvider x:Key="gradeLevelValues" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:GradeLevel"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    
    <!-- Create an instance of the new "ScoutViewModel" class to be the data context on the edit
         window. This new class will act as a go-between between the window and the underlying
         scout. -->

    <Window.DataContext>
        <local:ScoutViewModel/>
    </Window.DataContext>

    <!-- Begin definition of the main stack panel for the window. -->

    <StackPanel Margin="5">

        <!-- Place a stack panel to show the scout name.

             The binding on the textbox now binds to the "Name" property on the view model. -->

        <StackPanel Margin="8,8,0,0">
            <TextBlock Text="Scout Name"/>
            <TextBox Name="nameBox" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>

        <!-- Place another stack panel to show how many cookie boxes the scout has sold.

             The binding on the textbox now binds to the "Sold" property on the view model. -->

        <StackPanel Margin="8">
            <TextBlock Text="Boxes Sold"/>
            <TextBox Text="{Binding Path=Sold, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>

        <!-- Place a group box for the scout grade levels. -->

        <GroupBox Header="Grade Level" Margin="8" Padding="4">
            <ComboBox ItemsSource="{Binding Source={StaticResource gradeLevelValues}}"
                          SelectedItem="{Binding GradeLevel}"/>
        </GroupBox>

        <!-- Place one more stack panel to hold the side by side "Ok" and "Cancel" buttons.

            The "Ok" button command property now binds to the "Ok" property on the view model. -->
        
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,8,0,0">
            <Button Margin="0,0,4,0" Width="108" IsDefault="True" Content="Ok"
                    Command="{Binding Ok}"/>
            <Button Margin="4,0,0,0" Width="108" IsCancel="True" Content="Cancel"/>
        </StackPanel>
    </StackPanel>
</Window>
