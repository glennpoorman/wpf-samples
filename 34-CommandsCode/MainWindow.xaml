<Window x:Class="CommandsCode.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:CommandsCode"
        Title="CommandsCode" Height="310" Width="410" ResizeMode="NoResize">

    <!-- Create a resource section for the window. -->

    <Window.Resources>

        <!-- Create the converter we need to convert between grade level and color. -->

        <local:LevelToColorConverter x:Key="levelToColorConverter"/>

        <!-- Create a styole for a "ListViewItem". -->

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Foreground" Value="{Binding Path=GradeLevel,
                    Converter={StaticResource levelToColorConverter}}"/>
        </Style>

        <!-- Create a style for images to decrease the opacity when they are disabled. -->

        <Style TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Create an instance of the "Scouts" class and set it as the data context on the window. -->

    <Window.DataContext>
        <local:Scouts/>
    </Window.DataContext>

    <!-- Begin definition of the main dock panel element. -->

    <DockPanel>

        <!-- Start the menu definition docking the menu to the top of the dock panel and add the
             menu items.

             Note that the menu items are still using the "Command" properties just as in the
             previous sample. The commands and the bindings are identical to those of the previous
             sample but now they defined in in the code-behind as opposed to being defined in the
             XAML.

             So the "Command" properties here reference the static command objects in the
             "CustomCommands" class instead of referencing static window resources. -->

        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="E_xit" Command="ApplicationCommands.Close"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Add Scout" Command="local:CustomCommands.AddScout"/>
                <MenuItem Header="_Edit Scout" Command="local:CustomCommands.EditScout"/>
                <MenuItem Header="_Delete Scout" Command="local:CustomCommands.DeleteScout"/>
                <Separator/>
                <MenuItem Header="Add _Sale" Command="local:CustomCommands.AddSale"/>
                <MenuItem Header="Sub_tract Sale" Command="local:CustomCommands.SubtractSale"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About..." Command="local:CustomCommands.About"/>
            </MenuItem>
        </Menu>

        <!-- Place a toolbar for our commands right under the menu. -->

        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button ToolTip="Add Scout" Command="local:CustomCommands.AddScout">
                    <Image Source="Resources/newButton.gif"/>
                </Button>
                <Button ToolTip="Edit Scout" Command="local:CustomCommands.EditScout">
                    <Image Source="Resources/propertiesButton.gif"/>
                </Button>
                <Button ToolTip="Delete Scout" Command="local:CustomCommands.DeleteScout">
                    <Image Source="Resources/deleteButton.gif"/>
                </Button>
                <Separator/>
                <Button ToolTip="Add Sale" Command="local:CustomCommands.AddSale">
                    <Image Source="Resources/saleAddButton.gif"/>
                </Button>
                <Button ToolTip="Subtract Sale" Command="local:CustomCommands.SubtractSale">
                    <Image Source="Resources/saleSubButton.gif"/>
                </Button>
                <Separator/>
                <Button ToolTip="About" Command="local:CustomCommands.About">
                    <Image Source="Resources/helpButton.gif"/>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <!-- Place a text block containing a brief description of the app. -->

        <TextBlock Text="Cookie Sales" FontWeight="Bold" FontStyle="Italic" DockPanel.Dock="Top"
                   Margin="6,6,0,0"/>

        <!-- Place a list view to hold the list of participating scouts.

             Note that we've added a "MouseDoubleClick" method. We'll use the method to edit a scout
             when double clicked in the list. -->

        <ListView Margin="6" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding}"
                  MouseDoubleClick="ListDoubleClick">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="200"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Sold}" Header="Boxes Sold" Width="80"/>
                    <GridViewColumn DisplayMemberBinding="{Binding GradeLevel}" Header="Level" Width="80"/>
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
</Window>
